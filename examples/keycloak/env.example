# The docker image tag that is used for platform deployment
# See https://ghcr.io/tenzir/platform
TENZIR_PLATFORM_VERSION=latest

# The `platform.local` placeholder domain needs to be
# replaced by an ip or hostname under which the host running
# the docker compose file is reachable.
#
# **NOTE**: The issuer URL must be a hostname or ip address
# that can be used to reach the container *both* from within
# the docker network and from a user's browser. In particular
# `localhost` will not work.
#
# Also, the user id referenced in `TENZIR_PLATFORM_OIDC_ADMIN_RULES`
# needs to be replaced by the user id of the intended admin user once
# that user is created in keycloak.

TENZIR_PLATFORM_UI_ENDPOINT=http://platform.local:3000
TENZIR_PLATFORM_API_ENDPOINT=http://platform.local:3001
TENZIR_PLATFORM_NODES_ENDPOINT=ws://platform.local:3002
TENZIR_PLATFORM_DOWNLOADS_ENDPOINT=http://platform.local:3003
TENZIR_PLATFORM_LOGIN_ENDPOINT=http://platform.local:3004

TENZIR_PLATFORM_OIDC_PROVIDER_NAME=keycloak
TENZIR_PLATFORM_OIDC_PROVIDER_ISSUER_URL=http://platform.local:3004/realms/master
TENZIR_PLATFORM_OIDC_TRUSTED_AUDIENCES='{"issuer": "http://platform.local:3004/realms/master","audiences": ["tenzir-app", "tenzir-cli"]}'
TENZIR_PLATFORM_ADMIN_RULES='[{"auth_fn":"auth_user","user_id":"00000000-0000-0000-0000-000000000000"}]'

TENZIR_PLATFORM_OIDC_CLI_CLIENT_ID=tenzir-cli
TENZIR_PLATFORM_OIDC_APP_CLIENT_ID=tenzir-app
TENZIR_PLATFORM_OIDC_APP_CLIENT_SECRET=xxxxxxxxxxxxxxxxxxxxxxxx

# If local demo nodes are enabled, the platform may spawn demo nodes
# as local docker containers. Requires `docker.sock` to be mounted
# in the container and a demo node image available locally.
TENZIR_PLATFORM_DISABLE_LOCAL_DEMO_NODES=false
TENZIR_PLATFORM_DEMO_NODE_IMAGE=tenzir/tenzir-node:latest

# Database connection
TENZIR_PLATFORM_STORE_TYPE=postgres
TENZIR_PLATFORM_POSTGRES_USER=postgres
TENZIR_PLATFORM_POSTGRES_PASSWORD=postgres
TENZIR_PLATFORM_POSTGRES_DB=platform
TENZIR_PLATFORM_POSTGRES_HOSTNAME=postgres:5432


# -------------------------------------------------------------------------------------------
# Variables that are not user-facing, these should move into a separate file later on.
# -------------------------------------------------------------------------------------------

# Secrets used by the platform
#  - AUTH_SECRET:
#      An arbitrary random string used as key to encrypt frontend cookies.
#      Generate with `openssl rand -hex 32`.
#  - TENANT_TOKEN_ENCRYPTION_KEY:
#      Encryption key used to generate user keys
#      Generate with `openssl rand 32 | base64`.
#  - APP_API_KEY:
#      An arbitrary random string used by the app to access the `/webapp` API.
#      Generate with `openssl rand -hex 32`.
#  - MASTER_SEED:
#      Used for encrypting workspace secrets.
#      Generate with `openssl rand -hex 64`.
TENZIR_PLATFORM_INTERNAL_AUTH_SECRET=0000000000000000000000000000000000000000000000000000000000000000
TENZIR_PLATFORM_INTERNAL_TENANT_TOKEN_ENCRYPTION_KEY=AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
TENZIR_PLATFORM_INTERNAL_APP_API_KEY=0000000000000000000000000000000000000000000000000000000000000000
TENZIR_PLATFORM_INTERNAL_MASTER_SEED=00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

# The access key must be valid and must have read and write permissions on the bucket.
# When using the bundled seaweed instance, these are also arbitrary strings that
# are automatically written into `/config.json` in the seaweed container.
TENZIR_PLATFORM_INTERNAL_BUCKET_NAME=platform-bucket
TENZIR_PLATFORM_INTERNAL_ACCESS_KEY_ID=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
TENZIR_PLATFORM_INTERNAL_SECRET_ACCESS_KEY=yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyy
