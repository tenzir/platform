# Example values for tenzir-platform deployment
# Copy this file and customize for your environment

global:
  domain: "your-domain.com"
  randomSubdomain: false
  region: "eu-west-1"

# Authentication configuration - REQUIRED
auth:
  provider: "oidc"
  oidc:
    issuerUrl: "https://your-keycloak.com/realms/tenzir/.well-known/openid_configuration"
    clientId: "tenzir-platform"
    clientSecret: "your-client-secret"

# Update ingress hosts to match your domain
gateway:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/websocket-services: "tenzir-platform-gateway"
    hosts:
      - host: nodes.your-domain.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: gateway-tls
        hosts:
          - nodes.your-domain.com

ui:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: ui.your-domain.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: ui-tls
        hosts:
          - ui.your-domain.com

api:
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - host: api.your-domain.com
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: api-tls
        hosts:
          - api.your-domain.com

# Production resource configurations
gateway:
  replicaCount: 2
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

ui:
  replicaCount: 2
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

api:
  replicaCount: 3
  resources:
    limits:
      cpu: 2000m
      memory: 2Gi
    requests:
      cpu: 1000m
      memory: 1Gi

# PostgreSQL configuration
postgresql:
  enabled: true
  auth:
    database: "tenzir"
    username: "tenzir_admin"
  primary:
    persistence:
      enabled: true
      size: 100Gi
      storageClass: "gp2"
    resources:
      limits:
        cpu: 2000m
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 1Gi

# MinIO configuration  
minio:
  enabled: true
  persistence:
    enabled: true
    size: 100Gi
    storageClass: "gp2"
  resources:
    requests:
      memory: 512Mi
      cpu: 250m
    limits:
      memory: 1Gi
      cpu: 1000m

# Enable monitoring if you have Prometheus
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: monitoring