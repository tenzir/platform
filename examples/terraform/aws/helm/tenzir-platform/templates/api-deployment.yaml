{{- if .Values.api.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tenzir-platform.fullname" . }}-api
  labels:
    {{- include "tenzir-platform.api.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      {{- include "tenzir-platform.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tenzir-platform.api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tenzir-platform.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: api
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.images.api.repository }}:{{ .Values.images.api.tag }}"
          imagePullPolicy: {{ .Values.images.api.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: BASE_PATH
              value: "{{ .Values.api.env.BASE_PATH }}"
            - name: STORE__TYPE
              value: "{{ .Values.api.env.STORE__TYPE }}"
            - name: STORE__POSTGRES_URI
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgres.name }}
                  key: {{ .Values.secrets.postgres.uriKey }}
            - name: TENANT_MANAGER_APP_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.tenantManager.appApiKey.name }}
                  key: {{ .Values.secrets.tenantManager.appApiKey.key }}
            - name: TENANT_MANAGER_TENANT_TOKEN_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.tenantManager.tenantTokenEncryptionKey.name }}
                  key: {{ .Values.secrets.tenantManager.tenantTokenEncryptionKey.key }}
            - name: WORKSPACE_SECRETS_MASTER_SEED
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.workspaceSecrets.masterSeed.name }}
                  key: {{ .Values.secrets.workspaceSecrets.masterSeed.key }}
            - name: TENANT_MANAGER_AUTH__TRUSTED_AUDIENCES
              value: |
                {
                  "issuer": "{{ .Values.auth.oidc.issuerUrl }}",
                  "audiences": ["{{ .Values.auth.oidc.clientId }}"]
                }
            - name: GATEWAY_WS_ENDPOINT
              value: "wss://{{ include "tenzir-platform.nodesDomain" . }}"
            - name: GATEWAY_HTTP_ENDPOINT
              value: "https://{{ include "tenzir-platform.nodesDomain" . }}"
            {{- if .Values.minio.enabled }}
            - name: TENANT_MANAGER_SIDEPATH_BUCKET_NAME
              value: "tenzir-sidepath"
            - name: AWS_ENDPOINT_URL_S3
              value: {{ include "tenzir-platform.minioEndpoint" . }}
            - name: AWS_ACCESS_KEY_ID
              value: "minioadmin"
            - name: AWS_SECRET_ACCESS_KEY
              value: "minioadmin"
            {{- end }}
            - name: TENZIR_DEMO_NODE_IMAGE
              value: "{{ .Values.images.node.repository }}:{{ .Values.images.node.tag }}"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}