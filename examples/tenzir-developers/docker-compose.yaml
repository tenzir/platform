# A self-contained instance of the platform running on the
# local machine, which uses the staging instance of Auth0
# as auth provider. 

# Container ports are mapped to the range 3000-3004

services:
  platform:
    # image: ghcr.io/tenzir/platform:${TENZIR_PLATFORM_VERSION:-latest}
    build: ../../components/tenant-manager/platform/tenant_manager/
    command: ["tenant_manager/rest/server/local.py"]
    environment:
      - BASE_PATH=
      - GATEWAY_WS_ENDPOINT=${TENZIR_PLATFORM_CONTROL_ENDPOINT}
      - GATEWAY_HTTP_ENDPOINT=http://websocket-gateway:5000
      - TENZIR_DEMO_NODE_IMAGE=${TENZIR_PLATFORM_DEMO_NODE_IMAGE:-tenzir/tenzir-demo:latest}
      - TENANT_MANAGER_APP_API_KEY=${TENZIR_PLATFORM_INTERNAL_APP_API_KEY}
      - TENANT_MANAGER_TENANT_TOKEN_ENCRYPTION_KEY=${TENZIR_PLATFORM_INTERNAL_TENANT_TOKEN_ENCRYPTION_KEY}
      - TENANT_MANAGER_AUTH__ENABLE_SELF_SIGNED=false
      - TENANT_MANAGER_AUTH__TRUSTED_AUDIENCES=${TENZIR_PLATFORM_OIDC_TRUSTED_AUDIENCES}
      - TENANT_MANAGER_AUTH__ADMIN_FUNCTIONS=${TENZIR_PLATFORM_OIDC_ADMIN_RULES}
      - STORE__TYPE=${TENZIR_PLATFORM_STORE_TYPE}
      - STORE__POSTGRES_URI=postgresql://${TENZIR_PLATFORM_POSTGRES_USER}:${TENZIR_PLATFORM_POSTGRES_PASSWORD}@${TENZIR_PLATFORM_POSTGRES_HOSTNAME}/${TENZIR_PLATFORM_POSTGRES_DB}
      # seaweedfs s3 connection
      - TENANT_MANAGER_SIDEPATH_BUCKET_NAME=${TENZIR_PLATFORM_INTERNAL_BUCKET_NAME}
      - BLOB_STORAGE__ENDPOINT_URL=http://seaweed:8333
      - BLOB_STORAGE__PUBLIC_ENDPOINT_URL=${TENZIR_PLATFORM_BLOBS_ENDPOINT}
      - BLOB_STORAGE__ACCESS_KEY_ID=${TENZIR_PLATFORM_INTERNAL_ACCESS_KEY_ID}
      - BLOB_STORAGE__SECRET_ACCESS_KEY=${TENZIR_PLATFORM_INTERNAL_SECRET_ACCESS_KEY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 3001:5000
    depends_on:
      - websocket-gateway
      - postgres

  websocket-gateway:
    # image: ghcr.io/tenzir/platform:${TENZIR_PLATFORM_VERSION:-latest}
    build: ../../components/tenant-manager/platform/tenant_manager/
    environment:
      - BASE_PATH=
      - TENZIR_PROXY_TIMEOUT=60
      - TENANT_MANAGER_APP_API_KEY=${TENZIR_PLATFORM_INTERNAL_APP_API_KEY}
      - TENANT_MANAGER_TENANT_TOKEN_ENCRYPTION_KEY=${TENZIR_PLATFORM_INTERNAL_TENANT_TOKEN_ENCRYPTION_KEY}
      - STORE__TYPE=${TENZIR_PLATFORM_STORE_TYPE}
      - STORE__POSTGRES_URI=postgresql://${TENZIR_PLATFORM_POSTGRES_USER}:${TENZIR_PLATFORM_POSTGRES_PASSWORD}@${TENZIR_PLATFORM_POSTGRES_HOSTNAME}/${TENZIR_PLATFORM_POSTGRES_DB}
    depends_on:
      - postgres
    command: ["tenant_manager/ws/server/local.py"]
    ports:
      - 3099:5000

  app:
    # image: ghcr.io/tenzir/app:${TENZIR_PLATFORM_VERSION:-latest}
    build: ../../components/app
    environment:
      - AUTH_TRUST_HOST=true
      - PUBLIC_ENABLE_HIGHLIGHT=false
      - ORIGIN=${TENZIR_PLATFORM_DOMAIN}
      - PRIVATE_OIDC_PROVIDER_CLIENT_ID=${TENZIR_PLATFORM_APP_CLIENT_ID}
      - PRIVATE_OIDC_PROVIDER_CLIENT_SECRET=${TENZIR_PLATFORM_APP_CLIENT_SECRET}
      - PRIVATE_OIDC_PROVIDER_ISSUER_URL=${TENZIR_PLATFORM_OIDC_PROVIDER_ISSUER_URL}
      - PRIVATE_OIDC_PROVIDER_NAME=${TENZIR_PLATFORM_OIDC_PROVIDER_NAME}
      - PUBLIC_OIDC_PROVIDER_ID=${TENZIR_PLATFORM_OIDC_PROVIDER_NAME}
      - PUBLIC_WEBSOCKET_GATEWAY_ENDPOINT=${TENZIR_PLATFORM_CONTROL_ENDPOINT}
      - PRIVATE_USER_ENDPOINT=http://platform:5000/user
      - PRIVATE_WEBAPP_ENDPOINT=http://platform:5000/webapp
      - PRIVATE_WEBAPP_KEY=${TENZIR_PLATFORM_INTERNAL_APP_API_KEY}
      - AUTH_SECRET=${TENZIR_PLATFORM_INTERNAL_AUTH_SECRET}
      - PRIVATE_DRIZZLE_DATABASE_URL=postgres://${TENZIR_PLATFORM_POSTGRES_USER}:${TENZIR_PLATFORM_POSTGRES_PASSWORD}@${TENZIR_PLATFORM_POSTGRES_HOSTNAME}/${TENZIR_PLATFORM_POSTGRES_DB}
    depends_on:
      - postgres
    ports:
      - "3000:3000"

  cli:
    # image: ghcr.io/tenzir/tenzir-platform:${TENZIR_PLATFORM_VERSION:-latest}
    build: ../../cli
    profiles:
      - donotstart
    volumes:
      - cli_cache:/cache/tenzir-platform
    environment:
      - XDG_CACHE_HOME=/cache/
      - TENZIR_PLATFORM_CLI_API_ENDPOINT=http://platform:5000/
      - TENZIR_PLATFORM_CLI_ISSUER_URL=${TENZIR_PLATFORM_OIDC_PROVIDER_ISSUER_URL}
      - TENZIR_PLATFORM_CLI_CLIENT_ID=${TENZIR_PLATFORM_CLI_CLIENT_ID}

  postgres:
    image: postgres:14.5
    restart: always
    environment:
      - POSTGRES_USER=${TENZIR_PLATFORM_POSTGRES_USER}
      - POSTGRES_PASSWORD=${TENZIR_PLATFORM_POSTGRES_PASSWORD}
      - POSTGRES_DB=${TENZIR_PLATFORM_POSTGRES_DB}
    ports:
      # This is only exposed for debugging convenience.
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U postgres' ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Note the ~25 seconds startup delay before the seaweed server
  # becomes ready.
  seaweed:
    image: ghcr.io/tenzir/tenzir-seaweed:${TENZIR_PLATFORM_VERSION:-latest}
    restart: unless-stopped
    environment:
      - TENZIR_PLATFORM_INTERNAL_ACCESS_KEY_ID
      - TENZIR_PLATFORM_INTERNAL_SECRET_ACCESS_KEY
      - TENZIR_PLATFORM_INTERNAL_BUCKET_NAME
    command: ["server", "-dir=/var/lib/seaweedfs", "-s3", "-s3.config=/config.json"]
    volumes:
      - seaweed_data:/var/lib/seaweedfs
    ports:
      - '3003:8333'



  # To use dex as a completely local auth, uncomment the service below and
  # use the following configuration in the `.env` file.
  # Note that the issuer URL needs to be reachable from both the browser
  # and from inside the container network, so `localhost` will *NOT* work.

  # TENZIR_PLATFORM_OIDC_PROVIDER_NAME=dex
  # TENZIR_PLATFORM_OIDC_PROVIDER_CLIENT_ID=tenzir-app
  # TENZIR_PLATFORM_OIDC_PROVIDER_CLIENT_SECRET=ZXhhbXBsZS1hcHAtc2VjcmV0
  # TENZIR_PLATFORM_OIDC_PROVIDER_ISSUER_URL=http://platform.local:5556
  # TENZIR_PLATFORM_OIDC_TRUSTED_AUDIENCES='{"issuer": "http://platform.local:5556","audiences": ["tenzir-app"]}'
  # TENZIR_PLATFORM_OIDC_ADMIN_RULES='[{"auth_fn":"auth_user","user_id":"08a8684b-db88-4b73-90a9-3cd1661f5466"}]'

  # dex:
  #   image: dexidp/dex:v2.38.0
  #   environment:
  #     - TENZIR_PLATFORM_DOMAIN
  #     - TENZIR_PLATFORM_OIDC_PROVIDER_CLIENT_SECRET
  #     - TENZIR_PLATFORM_OIDC_PROVIDER_ISSUER_URL
  #     - DEX_USER=admin
  #     - DEX_EMAIL=admin@example.org
  #     # escaped bcrypt hash of the arbitary random password "062c73c4cf36ba07c0ab5f205ce3d011", generated with
  #     #     echo 062c73c4cf36ba07c0ab5f205ce3d011 | htpasswd -BinC 10 admin | cut -d: -f2 | sed 's,\$,$$,g'
  #     - DEX_PASSWORD_HASH=$$2y$$10$$cXl69JddxraqvWN5Ae01xuSSNJ5ONoJfMJIr058bXzIAIfwhj7k3C
  #   entrypoint: ["/tenzir-entrypoint.sh"]
  #   ports:
  #     - "5556:5556"
  #   volumes:
  #     - ./config/dex.tenzir-entrypoint.sh:/tenzir-entrypoint.sh
  #   command: ['dex', 'serve', '/etc/dex/tenzir-config.yaml']

volumes:
  postgres_data:
    driver: local
  seaweed_data:
    driver: local
  cli_cache:
    driver: local
