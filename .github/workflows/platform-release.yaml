name: Create Sovereign Edition containers and also push a new production Cloud Deployment

on:
  release:
    types: [created]

jobs:
  cloud_deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Get app submodule commit hash
        id: app-commit
        run: |
          cd ./components/app
          echo "::set-output name=commit::$(git rev-parse HEAD)"
          
      - name: Get tenant-manager submodule commit hash
        id: tenant-manager-commit
        run: |
          cd ./components/tenant-manager
          echo "::set-output name=commit::$(git rev-parse HEAD)"

      - name: Deploy tenant manager
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: tzcp-deploy-production.yaml
          repo: tenzir/event-horizon
          token: "${{ secrets.REPO_SCOPE_ACCESS_TOKEN }}"
          ref: ${{ steps.tenant-manager-commit.outputs.commit }}"

      - name: Deploy app
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: push-to-production.yaml
          repo: tenzir/app
          token: "${{ secrets.REPO_SCOPE_ACCESS_TOKEN }}"
          ref: ${{ steps.app-commit.outputs.commit }}"

  attach_release_artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Create tarball
        run: |
          tar cf platform.tar README.md LICENSE examples/ 
      - name: Publish tarball to the GitHub Release
        if: ${{ github.event_name == 'release' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "platform.tar"
          asset_name: "platform.tar"
          asset_content_type: application/x-tar

  build_and_push_containers:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Check out code

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: tenzir-dex
          tags: platform-${{ github.event.release.tag_name }}
          registry: ghcr.io
          directory: components/dex
          dockerfile: components/dex/Dockerfile
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: tenzir-seaweed
          tags: platform-${{ github.event.release.tag_name }}
          registry: ghcr.io
          directory: components/seaweed
          dockerfile: components/seaweed/Dockerfile
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: platform
          tags: platform-${{ github.event.release.tag_name }}
          registry: ghcr.io
          directory: components/tenant-manager/platform/tenant_manager
          dockerfile: components/tenant-manager/platform/tenant_manager/Dockerfile
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: tenzir-platform
          tags: platform-${{ github.event.release.tag_name }}
          registry: ghcr.io
          directory: components/tenant-manager/platform/public_cli
          dockerfile: components/tenant-manager/platform/public_cli/Dockerfile
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        with:
          image: tenzir-app
          tags: platform-${{ github.event.release.tag_name }}
          registry: ghcr.io
          directory: components/app
          dockerfile: components/app/Dockerfile
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
