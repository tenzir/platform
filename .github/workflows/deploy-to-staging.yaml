---
name: Deploy submodule updates to the staging environment

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      deploy-app:
        description: Deloy the app to staging
        type: boolean
        default: true
      deploy-tenant-manager:
        description: Deploy the tenant manager to staging
        type: boolean
        default: true


jobs:
  cloud_deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: false

      - name: Set up files changed
        id: files
        run: |
          echo "before: ${{ github.event.before }}"
          echo "now: ${{ github.sha }}"
          echo "::set-output name=files-changed::$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})"
          echo "::set-output name=app-commit::$(git ls-tree HEAD components/app | awk '{print $3}')"
          echo "::set-output name=tenant-manager-commit::$(git ls-tree HEAD components/tenant-manager | awk '{print $3}')"

      - name: Generate a token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ vars.TENZIR_AUTOBUMPER_APP_ID }}
          private-key: ${{ secrets.TENZIR_AUTOBUMPER_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Deploy tenant-manager
        if: |
          (github.event_type == 'workflow_dispatch' && inputs.deploy-tenant-manager) || 
          (github.event_type == 'push' && contains(${{ steps.files.outputs.files-changed }}, 'components/tenant-manager')
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          gh workflow -R tenzir/event-horizon run tzcp-deploy-staging.yaml \
            --ref ${{ steps.files.outputs.tenant-manager-commit }}

      - name: Deploy app
        if: |
          (github.event_type == 'workflow_dispatch' && inputs.deploy-app) || 
          (github.event_type == 'push' && contains(${{ steps.files.outputs.files-changed }}, 'components/app')
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          gh workflow -R tenzir/app run deploy-to-vercel.yaml \
            --ref ${{ steps.files.outputs.app-commit }} \
            -f deploy-staging=true
